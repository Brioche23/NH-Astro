---

const {title, videoUrl, description, slug} = Astro.props;
const id = 'video-'+slug;

// const videoSizes = ["md:w-1/2 md:ml-auto md:mr-20", "md:w-1/2 md:ml-auto md:ml-20", "md:w-2/3 md:ml-auto md:mr-0", "md:w-2/3 md:mr-auto md:ml-0", "md:w-1/3 md:ml-auto md:mr-0", "md:w-1/3 md:mr-auto md:ml-0"];

// function getRandomWidth() {
//   return videoSizes[Math.floor(Math.random() * videoSizes.length)];
// }

---

  <div id={id} data-open="false" class={`video-card relative transition-all duration-500 ease-in-out w-full`}>

      <div class="vimeo-full relative"> 
        <div class="controls-overlay absolute w-full h-full text-xl md:text-3xl">
          <button class="play-button absolute">play</button>
          <!-- <button class="close-button absolute top-5 right-5">close</button> -->
          
          <div class="play-bar ">
            <!-- <button class="play-button">play</button> -->
            <!-- <svg height="6" width="100%" class="play-progress rounded-full mr-4" style="background-color:rgba(217, 217, 217, 0.5) ;">
              <line class="progress-bar fill-orange absolute" x1="0" y1="3" x2="0%" y2="3" style="stroke:#FF4600;stroke-width:6" />
            </svg> -->
            
            <button class="mute-button">mute</button>
          </div>
        </div>
        <div id={title} class="video-wrapper relative ">
          <video src={videoUrl} />
          <!-- <p class="vimeo-title uppercase transition-opacity duration-500 ease-in-out absolute top-5 left-5 z-10">{title}</p> -->
        </div>
      </div>
    <div class="info-panel px-4 grid grid-rows-[1fr] transition-all duration-500 ease-in-out pt-5">
      <div class="w-full flex space-x-5 overflow-hidden text-xl md:text-3xl">
        <div class="title w-1/2 md:w-1/3">
          <p class=" uppercase">
            {title}
          </p>
        </div>
        <div class="credits w-1/2 md:w-1/3" set:html={description}>  
        </div>
      </div>
    </div>
  </div>

<script defer>
//   import "../scripts/vimeoCards2.js";
let isPlaying = false;

const video = document.querySelector('video')
const controlsOverlay = document.querySelector('.controls-overlay')
const muteButton = document.querySelector("button.mute-button");
const playButton = document.querySelector("button.play-button");

controlsOverlay?.addEventListener("mousemove", (e) => {
      playButton.style.left = e.clientX - playButton.offsetWidth / 2 + "px";
      playButton.style.top = e.clientY - playButton.offsetHeight / 2 + "px";
    });
controlsOverlay?.addEventListener("mouseenter", (e) => {
  playButton.style.visibility = "visible";
    });
controlsOverlay?.addEventListener("mouseleave", (e) => {
  playButton.style.visibility = "hidden";
    });

playButton?.addEventListener("click", () => {
       console.log("Play!");

      isPlaying ? video?.pause() : video?.play();
      playButton.innerHTML = isPlaying ? "play" : "pause";
      isPlaying = !isPlaying;
    });

    muteButton?.addEventListener("mouseover", ()=>{
      playButton.style.visibility = "hidden";
    })
    muteButton?.addEventListener("mouseleave", ()=>{
      playButton.style.visibility = "visible";
    })

    muteButton?.addEventListener("click", () => {
      console.log(muteButton.innerHTML);
      if (muteButton.innerHTML === "unmute") {
        muteButton.innerHTML = "mute";
        console.log("Unmute!");
        video.volume = 1;
      } else if (muteButton.innerHTML === "mute") {
        muteButton.innerHTML = "unmute";
        console.log("Mute!");
        video.volume = 0;

      }
    });


</script>

<style>

.controls-overlay button, .credits b{
@apply text-orange
}
.play{
width: 100%;
opacity: 1;
z-index: 5;
}
.back{
opacity: .5;
}

.video-card {
width: "";
z-index:3;
}
.video-card::after {
content:"";
position:absolute;
z-index:3;
width:100%;
height:100%;
left:0;
top:0;
}

  .controls-overlay{
    z-index: 6;
    cursor: none;
  }

  .play-button{
    cursor: none;
  }

  .play-bar{
    position: absolute;
    bottom: 1rem;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    width: 100%;
    padding: 0 1rem;
    gap: 4px;

  }

.video-wrapper {
  z-index:1;
  aspect-ratio: 16/9;
  width:100%;
  height:100%;
}
</style>