---
import { getCollection } from "astro:content";
import { Image } from 'astro:assets';


import heroImage from '../img/hero.svg';
import BaseLayout from '../layouts/BaseLayout.astro';
import BlogPost from '../components/BlogPost.astro';
const allPosts = await getCollection('posts');
const pageTitle = "NOISE HEROES";

const servizi = ["post produzione audio", "sound design", "consulenza e produzione","licensing"]
---
<BaseLayout {pageTitle}>

  <section id="block-1" class="block intro">
    <div class="content md:w-2/3">

      <p class="intro-text font-display text-orange text-7xl ">TA-DAH!</p>
      <p class="intro-text text-2xl md:text-4xl ">
        Noise Heroes è un gruppo di eroi con un super potere. Saper trasformare i rumori in suoni. E i suoni in storie. Siamo una casa di produzione audio con un’esperienza che è tutta un’altra storia. Se volete un sound che lasci tutti a bocca aperta, avete bisogno degli eroi: o meglio, dei Noise Heroes. </p>
      </div>
  </section>

    <div id="block-2" class="h-auto">

      <Image src={heroImage} alt="The Noise Heroes" class:list={'sticky top-16'}/>
    </div>

    <section class="block intro">

      <div id="block-3" class="content md:flex md:space-x-4">

        <p class="text-2xl md:text-4xl md:w-2/3 ">
          Perché Noise Heroes e non Noise Regular People? Perché il nostro non è un semplice lavoro, ma una vocazione. Nel nostro DNA abbiamo i  geni di qp! Noi non siamo semplici impiegati dell’audio. Siamo una banda di innamorati del suono con la missione di trasformare i rumori in storie.
        </p>
        <p class="text-lg md:text-xl md:w-1/3">
          <span class="text-orange">Sound design & Post production</span> / Storytelling  / TV / Digital / Radio / Podcast / Voice Talents — <span class="text-orange">Music production</span> / Composizione / Produzione tailor made / Network di artisti, musicisti, DJ e produttori — <span class="text-orange">Music supervision & Licensing</span> / Ricerca del sound più adatto /Sincronizzazione / Negoziazione</p>
        </div>
      </section>

      <section id="block-4" class="block intro" >

        <div  class="content md:w-2/3">
          <p class=" text-2xl md:text-4xl ">
            <span class="text-purple pr-2">Puntuali</span>  Non si è mai visto un eroe arrivare in ritardo /  <span class="text-orange pr-2">Tailor made</span> Ogni sfida ha bisogno di una risposta adeguata / <span class="text-purple pr-2">Precisi</span>  Una volta stabilito l’obiettivo, lo centriamo al primo colpo / <span class="text-orange pr-2">Budget friendly</span>Gli eroi non fanno rapine… ma le sventano</p>
          </div>
      </section>

  <section class="work h-auto pt-10">

    <h2 class="before:content-['/'] before:pr-2">Work</h2>

    <ul class="video-list grid gap-5w pb-5">
      {allPosts.map((post) =>
      <BlogPost
        title={post.data.title}
        vimeoId = {post.data.vimeoId}
        cliente = {post.data.crediti.cliente}
        agenzia = {post.data.crediti.agenzia}
        regista = {post.data.crediti.regista}
        casa = {post.data.crediti.casa}
        soundDesign = {post.data.crediti.soundDesign}
        mix = {post.data.crediti.mix}
        />)}
    </ul>
  </section>

</BaseLayout>

<script is:inline src="https://player.vimeo.com/api/player.js"></script>
<script>

//   // Get the elements
// var element1 = document.querySelector('#block-1');
// var element2 = document.querySelector('#block-2');
// var element3 = document.querySelector('#block-3');

// // Listen for the scroll event
// window.addEventListener('scroll', function() {
//   // Calculate the scroll rate
//   var scrollTop = window.scrollY || document.documentElement.scrollTop;

//   // Apply the scroll rate to the elements
//   element1.style.transform = 'translateY(' + scrollTop * .2 + 'px)';
//   element2.style.transform = 'translateY(' + scrollTop * 0 + 'px)';
//   // element3.style.transform = 'translateY(' + scrollTop * -.2 + 'px)';
// });

gsap.registerPlugin(ScrollTrigger);

// create a timeline
let tl = gsap.timeline()


tl.fromTo(".intro-text", 
  { opacity: 0 }, { opacity: 1, duration: 3, stagger:0.5 }
);

gsap.utils.toArray(".block").forEach((block, i)=>{
  tl.from(block, {
    scrollTrigger:{
      trigger: block,
      start: "top top",
      pin:true,
      scrub: true,
      markers:false
    },

})
})
</script>